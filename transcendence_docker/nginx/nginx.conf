# Main NGINX configuration file

user root;
worker_processes auto;
pid /var/run/nginx.pid;

# Load the necessary modules and include default settings
#include /etc/nginx/conf.d/*.conf;

# Enable gzip compression (optional, but recommended)
#gzip on;
#gzip_types text/plain text/css application/javascript application/json application/xml application/xml+rss text/javascript;
#gzip_proxied any;
#gzip_min_length 1000;

# Events block is required
events {
    worker_connections 1024;  # Number of worker connections
}

# The HTTP context
http {
    # Include additional configuration if needed
    #include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/mime.types;  # This should be inside the http context

    # Server block for HTTPS
    server {
        listen 443 ssl;
        server_name ${ALLOWED_HOST};  # Replace with your domain or IP, or use * for any host

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        # SSL security settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;

        location / {
                try_files $uri @django;  # First try to serve the file, fallback to Django
        }

        # Reverse proxy to Django application running on Daphne (port 8000)
        location @django {
            proxy_pass http://web:8000;  # Assuming 'web' is the name of the Django service in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # This forwards the protocol (http or https) to Django
        }

        location /ws/ {
        proxy_pass http://web:8000;  # Connect to Daphne or WebSocket server
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        }

        location /static/ {
            alias /django/;  # Update this path to match your STATIC_ROOT
        }

        location /media/ {
            alias /media/;  # Update this path to match your MEDIA_ROOT
        }

        error_page 404 = @django;

        # Optional - WebSocket timeout
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }

    # Server block for HTTP
    server {
        listen 80;
        server_name ${ALLOWED_HOST};  # Replace with your domain or use * for any host

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # Optional: You can configure logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}


